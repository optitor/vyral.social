name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

# Set permissions for the GitHub token
permissions:
  contents: read
  pull-requests: write

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      # Step 2: Setup Node.js (Latest LTS - v22)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # Step 3: Verify Node.js and npm versions
      - name: Display Node.js and npm versions
        run: |
          node --version
          npm --version

      # Step 4: Clean install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 5: Run linting (optional but recommended)
      - name: Lint code
        run: npm run lint --if-present
        continue-on-error: true

      # Step 6: Build the Next.js application
      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production

      # Step 7: Verify build output
      - name: Verify build output
        run: |
          echo "Checking build directory..."
          ls -la build/
          if [ ! -f "build/index.html" ]; then
            echo "‚ùå Error: index.html not found in build directory!"
            exit 1
          fi
          echo "‚úÖ Build verification successful!"
          echo "Contents of build directory:"
          ls -la build/ | head -20

      # Step 8: Deploy to Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_TREE_031725610 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          
          ###### Repository/Build Configurations - CRITICAL CHANGE ######
          # Since we pre-built the app, point directly to the build folder
          app_location: "build"          # The already-built static files are here
          api_location: ""               # No API
          output_location: ""            # No additional build output (empty string, not ".")
          skip_app_build: true           # Don't rebuild - we already did it above
          ###### End of Repository/Build Configurations ######

      # Step 9: Output deployment URL
      - name: Display deployment information
        if: success()
        run: |
          echo "üöÄ Deployment successful!"
          echo "Static Web App URL: ${{ steps.builddeploy.outputs.static_web_app_url }}"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    
    steps:
      # Close the staging environment when PR is closed
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_TREE_031725610 }}
          action: "close"